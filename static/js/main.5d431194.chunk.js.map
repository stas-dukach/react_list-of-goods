{"version":3,"sources":["GoodsList.jsx","App.js","index.js"],"names":["GoodsList","state","renderForm","isReversed","sortBy","goods","props","reverse","setState","sortByName","sortByLength","reset","this","sortedGoods","sort","g1","g2","localeCompare","length","className","map","good","type","onClick","React","Component","goodsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,YAAY,EACZC,OAAQ,GACRC,MAAO,EAAKC,MAAMD,OALtB,EAQEE,QAAU,WACR,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAVzB,EAcEM,WAAa,WACX,EAAKD,SAAU,CAAEJ,OAAQ,UAf7B,EAkBEM,aAAe,WACb,EAAKF,SAAU,CAAEJ,OAAQ,YAnB7B,EAsBEO,MAAQ,WACN,EAAKH,SAAS,CACZL,YAAY,EAAOC,OAAQ,MAxBjC,4CA4BE,WAAU,IAAD,OACP,EAAkDQ,KAAKX,MAA/CI,EAAR,EAAQA,MAAOF,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,OAAQF,EAAnC,EAAmCA,WAC7BW,EAAW,YAAOR,GAkBxB,OAhBAQ,EAAYC,MAAK,SAACC,EAAIC,GACpB,OAAQZ,GACN,IAAK,OACH,OAAOW,EAAGE,cAAcD,GAC1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAITf,GACFU,EAAYN,UAIZ,yBAAKY,UAAU,OACXjB,EAUA,oCACE,4BACGW,EAAYO,KAAI,SAAAC,GAAI,OACnB,4BACGA,OAKP,4BACEF,UAAU,MACVG,KAAK,SACLC,QAASX,KAAKL,SAHhB,WAQA,4BACEY,UAAU,MACVG,KAAK,SACLC,QAASX,KAAKH,YAHhB,QAQA,4BACEU,UAAU,MACVG,KAAK,SACLC,QAASX,KAAKF,cAHhB,mBAQA,4BACES,UAAU,MACVG,KAAK,SACLC,QAASX,KAAKD,OAHhB,UA1CF,4BACEW,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAEN,YAAY,MAHhC,cAnDV,GAA+BsB,IAAMC,WCC/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOaC,EAJH,kBACV,kBAAC,EAAD,CAAWtB,MAAOqB,KCdpBE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5d431194.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class GoodsList extends React.Component {\r\n  state = {\r\n    renderForm: false,\r\n    isReversed: false,\r\n    sortBy: '',\r\n    goods: this.props.goods,\r\n  };\r\n\r\n  reverse = () => {\r\n    this.setState(state => ({\r\n      isReversed: !state.isReversed,\r\n    }));\r\n  };\r\n\r\n  sortByName = () => {\r\n    this.setState(({ sortBy: 'name' }));\r\n  };\r\n\r\n  sortByLength = () => {\r\n    this.setState(({ sortBy: 'length' }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      isReversed: false, sortBy: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { goods, isReversed, sortBy, renderForm } = this.state;\r\n    const sortedGoods = [...goods];\r\n\r\n    sortedGoods.sort((g1, g2) => {\r\n      switch (sortBy) {\r\n        case 'name':\r\n          return g1.localeCompare(g2);\r\n        case 'length':\r\n          return g1.length - g2.length;\r\n\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n\r\n    if (isReversed) {\r\n      sortedGoods.reverse();\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {!renderForm ? (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.setState({ renderForm: true });\r\n            }}\r\n          >\r\n            Start\r\n          </button>\r\n        ) : (\r\n          <>\r\n            <ul>\r\n              {sortedGoods.map(good => (\r\n                <li>\r\n                  {good}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <button\r\n              className=\"btn\"\r\n              type=\"button\"\r\n              onClick={this.reverse}\r\n            >\r\n              reverse\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn\"\r\n              type=\"button\"\r\n              onClick={this.sortByName}\r\n            >\r\n              sort\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn\"\r\n              type=\"button\"\r\n              onClick={this.sortByLength}\r\n            >\r\n              sort for length\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn\"\r\n              type=\"button\"\r\n              onClick={this.reset}\r\n            >\r\n              reset\r\n            </button>\r\n          </>\r\n        )\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGoodsList.propTypes = {\r\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <GoodsList goods={goodsFromServer} />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}